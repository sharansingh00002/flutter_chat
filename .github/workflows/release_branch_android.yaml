name: UAT build generation for release branch

on:
  push:
    branches: [ github_action_testing ]

jobs:
  build_IOS:
    name: Build iOS UAT builds
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '12.x'
          cache: 'gradle'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.3.0'
          channel: 'stable'
          cache: true
      - run: flutter clean
      - run: flutter pub get
      - run: |
          cd ios
          pod deintegrate
          pod repo update
          pod install
      - run: |
          flutter build ios --no-codesign
          cd build/ios/iphoneos
          mkdir Payload
          cd Payload
          ln -s ../Runner.app
          cd ..
          zip -r app.ipa Payload
      - name: Upload iPA
        uses: actions/upload-artifact@master
        with:
          name: ios-build
          path: build/ios/iphoneos
      - name: create upload IOS github release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/ios/iphoneos/app.ipa"
          token: ${{secrets.TOKEN}}
          tag: ios.v1.0.${{ github.run_number }}
          allowUpdates: true
          artifactContentType: "raw"
  build_apk:
    needs: [ build_IOS ]
    name: Build android UAT builds
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '12.x'
          cache: 'gradle'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.3.0'
          channel: 'stable'
          cache: true
      - run: flutter pub get
      - run: flutter build apk --release
      - name: Upload APK
        uses: actions/upload-artifact@master
        with:
          name: apk-build
          path: build/app/outputs/flutter-apk/app-release.apk
      - name: Create Android apk github release
        uses: ncipollo/release-action@v1
        with:
          artifacts: build/app/outputs/flutter-apk/*.apk
          token: ${{secrets.TOKEN}}
          tag: v1.0.${{ github.run_number }}
          allowUpdates: true
          artifactContentType: "raw"
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Upload APK to firebase
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_ANDROID_APPID}}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: testers
          file: build/app/outputs/flutter-apk/app-release.apk
      - name: Slack Notification
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          channel: '#incomingwwebhook'
          message: New build has been deployed
        if: always()
  upload_to_firebase_ios:
    name: Upload iOS Beta to Firebase App Distribution
    needs: [build_apk]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: ios-build
      - name: Upload IPA
        uses: wzieba/Firebase-Distribution-Github-Action@v1.0.0
        with:
          appId: ${{secrets.FIREBASE_ANDROID_APPID}}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: testers
          file: Runner.ipa